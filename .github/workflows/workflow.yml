# .github/workflows/**main.yml**
name: Django-app workflow
on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r ./backend/foodgram/requirements.txt 
    - name: Test with flake8
      run: |
        flake8 .

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./backend/foodgram/
          tags: razuvaev/foodgram_backend:latest
      - name: Push frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./frontend/
          tags: razuvaev/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: executing remote ssh commands to deploy
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull razuvaev/foodgram_backend:latest
            sudo docker pull razuvaev/foodgram_frontend:latest
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker-compose rm frontend
            rm ./infra/.env
            touch ./infra/.env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> ./infra/.env
            echo DB_NAME=${{ secrets.DB_NAME }} >> ./infra/.env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> ./infra/.env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> ./infra/.env
            echo DB_HOST=${{ secrets.DB_HOST }} >> ./infra/.env
            echo DB_PORT=${{ secrets.DB_PORT }} >> ./infra/.env
            sudo docker-compose up -d
            sudo docker-compose exec -T backend python manage.py migrate
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!