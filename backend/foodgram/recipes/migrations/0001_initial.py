# Generated by Django 2.2.28 on 2022-09-01 09:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранное',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование')),
                ('measurement_unit', models.CharField(max_length=200, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='IngredientInRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Ингредиент рецепта',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование')),
                ('text', models.TextField(verbose_name='Описание')),
                ('cooking_time', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Время приготовления в минутах')),
                ('image', models.ImageField(upload_to='recipes/', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Корзина',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Подписки',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование')),
                ('color', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Поле не соответствует формату HEX-кода ^#(([a-zA-Z0-9]{6})|([a-zA-Z0-9]{3}))$', regex='^#(([a-zA-Z0-9]{6})|([a-zA-Z0-9]{3}))$')], verbose_name='Цвет')),
                ('slug', models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(message='Поле не соответствует формату slug ^[-a-zA-Z0-9_]+$', regex='^[-a-zA-Z0-9_]+$')])),
            ],
            options={
                'verbose_name': 'Тег',
                'ordering': ['-id'],
            },
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['slug'], name='recipes_tag_slug_3ea026_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['name'], name='recipes_tag_name_56fd94_idx'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='shoppingcard',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase', to='recipes.Recipe', verbose_name='Купить'),
        ),
        migrations.AddField(
            model_name='shoppingcard',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(related_name='recipes', to='recipes.Tag', verbose_name='Теги'),
        ),
        migrations.AddField(
            model_name='ingredientinrecipe',
            name='ingredients',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recipes', to='recipes.Ingredient', verbose_name='Ингредиент'),
        ),
        migrations.AddField(
            model_name='ingredientinrecipe',
            name='recipes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.Recipe', verbose_name='Рецепт'),
        ),
        migrations.AddIndex(
            model_name='ingredient',
            index=models.Index(fields=['name'], name='recipes_ing_name_164c6a_idx'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='recipes.Recipe', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['user'], name='recipes_sub_user_id_e89dc0_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['author'], name='recipes_sub_author__d5488c_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['user', 'author'], name='recipes_sub_user_id_bdcc40_idx'),
        ),
        migrations.AddConstraint(
            model_name='subscription',
            constraint=models.UniqueConstraint(fields=('user', 'author'), name='unique_review_subscription'),
        ),
        migrations.AddConstraint(
            model_name='subscription',
            constraint=models.CheckConstraint(check=models.Q(_negated=True, user=django.db.models.expressions.F('author')), name='forbidden_subscript_self'),
        ),
        migrations.AddIndex(
            model_name='shoppingcard',
            index=models.Index(fields=['user'], name='recipes_sho_user_id_3c3c4a_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingcard',
            index=models.Index(fields=['recipe'], name='recipes_sho_recipe__3f7847_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingcard',
            index=models.Index(fields=['user', 'recipe'], name='recipes_sho_user_id_535a2d_idx'),
        ),
        migrations.AddConstraint(
            model_name='shoppingcard',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_review_shopping_card'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['name'], name='recipes_rec_name_891f25_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['author'], name='recipes_rec_author__e2628b_idx'),
        ),
        migrations.AddIndex(
            model_name='ingredientinrecipe',
            index=models.Index(fields=['ingredients'], name='recipes_ing_ingredi_f23928_idx'),
        ),
        migrations.AddIndex(
            model_name='ingredientinrecipe',
            index=models.Index(fields=['recipes'], name='recipes_ing_recipes_3b75aa_idx'),
        ),
        migrations.AddIndex(
            model_name='ingredientinrecipe',
            index=models.Index(fields=['recipes', 'ingredients'], name='recipes_ing_recipes_6ebfca_idx'),
        ),
        migrations.AddConstraint(
            model_name='ingredientinrecipe',
            constraint=models.UniqueConstraint(fields=('ingredients', 'recipes'), name='unique_ingredients_in_recipe'),
        ),
        migrations.AddIndex(
            model_name='favorite',
            index=models.Index(fields=['user'], name='recipes_fav_user_id_2674ef_idx'),
        ),
        migrations.AddIndex(
            model_name='favorite',
            index=models.Index(fields=['recipe'], name='recipes_fav_recipe__f749a7_idx'),
        ),
        migrations.AddIndex(
            model_name='favorite',
            index=models.Index(fields=['user', 'recipe'], name='recipes_fav_user_id_b3978f_idx'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_review_favorite'),
        ),
    ]
